---
title: "Project title"
subtitle: "INFO 526 - Summer 2024 - Final Project"
author: "Author names"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
---

```{r}
#| label: load-packages
#| include: false

# Load packages here
pacman::p_load(dplyr,
               tidyverse, 
               glue, 
               scales, 
               here, 
               ggthemes, 
               janitor, 
               ggplot2, 
               readr,
               ggrepel,
               ggmosaic)

```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

```{r}
#| label: load-data
#| include: false


# load data here
coffee_survey <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-05-14/coffee_survey.csv')

# glimpse at data (4,042 rows)
coffee_survey

```

# Using Quarto for presentations

## Quarto

-   The presentation is created using the Quarto CLI

-   `##` sets the start of a new slide

## Layouts

You can use plain text

::: columns
::: {.column width="40%"}
-   or bullet points[^1]
:::

::: {.column width="60%"}
or in two columns
:::
:::

[^1]: And add footnotes

-   like

-   this

## Code

```{r, echo=FALSE}
#| label: code for plot 1 and 2
#| fig-height: 8
#| fig-width: 8

coffee_survey

##############
# cleaning for general and plot 1
# selecting relevant variables for both plots (3,343 rows)
coffee_survey_cleanNA <- coffee_survey %>% 
  select(cups, employment_status, number_children, wfh, age) %>% 
  filter(!is.na(cups)) %>% 
  filter(!is.na(employment_status)) %>%
  filter(!is.na(wfh)) %>% 
  filter(!is.na(number_children)) %>% 
  filter(!is.na(age)) 

coffee_survey_cleanNA  

coffee_survey_count_cups <- coffee_survey_cleanNA %>% 
  count(cups) %>% # counting total count for each employment_status
  rename(total_cups = n)

#calculating percentages
coffee_survey_count_cups <- coffee_survey_count_cups %>% 
  mutate(percent = total_cups/sum(total_cups))

coffee_survey_count_cups <- coffee_survey_count_cups %>% 
  mutate(percent = percent(coffee_survey_count_cups$percent, accuracy = 0.1))
  
#mutate to manually position labels on pie chart
coffee_survey_count_plot1 <- coffee_survey_count_cups %>%  
  mutate(csum = rev(cumsum(rev(total_cups))),
         pos = total_cups/2 + lead(csum, 1),
         pos = if_else(is.na(pos), total_cups/2, pos))


coffee_survey_count_plot1

# plot 1 ^
###################
# plot 2: looking at differences in employment status

# selecting relevant variables and filtering out na for plot 1 (3,419 rows)

coffee_survey_count_es <- coffee_survey_cleanNA %>% 
  select(cups, employment_status) %>% 
  count(employment_status) %>% # counting total count for each employment_status
  rename(total_es = n)

coffee_survey_count_es

coffee_survey_count_cups_es <- coffee_survey_cleanNA %>% 
  count(cups, employment_status) %>% # counting total count for each cups + employment_status
  rename(total_es_c = n)

coffee_survey_count_cups_es


# combining counts with original plot and cleaning data set for plotting 
coffee_survey_count_plot2 <- left_join(coffee_survey_count_es, coffee_survey_count_cups_es) 

coffee_survey_count_plot2

#calculating percentages
coffee_survey_count_plot2 <- coffee_survey_count_plot2 %>% 
  mutate(percent = total_es_c/total_es)

coffee_survey_count_plot2 <- coffee_survey_count_plot2 %>% 
  mutate(percent = percent(coffee_survey_count_plot2$percent, accuracy = 0.1))
  
#mutate to manually position labels on pie chart
coffee_survey_count_plot2 <- coffee_survey_count_plot2 %>% 
  group_by(employment_status) %>% 
  mutate(csum = rev(cumsum(rev(total_es_c))),
         pos = total_es_c/2 + lead(csum, 1),
         pos = if_else(is.na(pos), total_es_c/2, pos))

coffee_survey_count_plot2

#creating plots
es1 <- coffee_survey_count_plot2 %>%  
  filter(employment_status %in% c("Employed full-time")) %>% 
  ggplot(aes(x = "", y = total_es_c, fill = cups)) +
  coord_polar(theta = "y") +
  scale_x_discrete(NULL, expand = c(0, 0)) +
  scale_y_continuous(NULL, expand = c(0, 0)) +
  scale_fill_manual(values = 
                      c("#FBE183FF", "#FE9B00FF",
                        "#D8443CFF", "#9B3441FF", 
                        "#E87B89FF", "#E6A2A6FF"), name = "Cups of Coffee per Day") +
  geom_label_repel( 
    mapping = aes(y = pos, label = paste(percent)),
    size = 3,
    nudge_x = 0.9,
    show.legend = FALSE) +
  theme_void() +
  theme(
    axis.text = element_blank(),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.title.position = "plot",
    legend.text = element_text(size = 8), #text of legend
    legend.key.size = unit(0.25, "cm"),
    plot.caption = element_text(hjust = 0, size = 6, face = "bold"),
    plot.tag = element_text(size = 6, hjust = 0),
    plot.tag.position = "bottom"
  ) 

es2 <- coffee_survey_count_plot2 %>%  
  filter(employment_status %in% c("Employed part-time")) %>% 
  ggplot(aes(x = "", y = total_es_c, fill = cups)) 

es3 <- coffee_survey_count_plot2 %>%  
  filter(employment_status %in% c("Retired")) %>% 
  ggplot(aes(x = "", y = total_es_c, fill = cups)) 

es4 <- coffee_survey_count_plot2 %>%  
  filter(employment_status %in% c("Student")) %>% 
  ggplot(aes(x = "", y = total_es_c, fill = cups)) 

es5 <- coffee_survey_count_plot2 %>%  
  filter(employment_status %in% c("Unemployed")) %>% 
  ggplot(aes(x = "", y = total_es_c, fill = cups)) 

es6 <- coffee_survey_count_plot2 %>%  
  filter(employment_status %in% c("Homemaker")) %>% 
  ggplot(aes(x = "", y = total_es_c, fill = cups)) 

# plot 2 ^
############################

```

```{r, echo=FALSE}
#| label: code for plot 3 and 4
#| fig-height: 8
#| fig-width: 8

coffee_survey

coffee_survey_filter1 <- coffee_survey %>% 
  select(submission_id, cups, employment_status, number_children, wfh, age) %>% 
  filter(!is.na(cups)) %>% 
  mutate(
    cups = recode(cups,
                  "Less than 1" = "0",
                  "1" = "1",
                  "2" = "2",
                  "3" = "3",
                  "4" = "4",
                  "More than 4" = "5"))

coffee_survey_filter1

coffee_survey_filter1_longer <- coffee_survey_filter1 %>% 
  pivot_longer(
    cols = c("employment_status", "number_children", "age", "wfh"), 
    names_to = "explanatory",
    values_to = "explanatory_value"
    ) %>% 
  filter(!is.na(explanatory_value)) %>% 
  pivot_longer(
    cols = c("cups"),
    names_to = "response",
    values_to = "response_value"
  )

coffee_survey_filter1_longer #14,289 rows

# now i will group the data and calculate summary statistics
coffee_survey_filter1_longer$response_value <- as.numeric(coffee_survey_filter1_longer$response_value)


coffee_survey_stats_all <- coffee_survey_filter1_longer %>% 
  group_by(response) %>% 
 summarise(
    mean = mean(response_value),
    low = quantile(response_value, 0.10),
    high = quantile(response_value, 0.90)
  ) %>% 
  mutate(across(c("mean"), round, 2)) #mean output was returning values with 4 decimal places

coffee_survey_stats_all$explanatory <- c("All")
coffee_survey_stats_all$explanatory_value <- c("")

#now by group
coffee_survey_stats_by_group <-  coffee_survey_filter1_longer %>% 
  filter(!is.na(response_value)) %>% 
  group_by(explanatory, explanatory_value, response) %>% 
  summarise(
    mean = mean(response_value),
    low = quantile(response_value, 0.10),
    high = quantile(response_value, 0.90)
  ) %>% 
  mutate(across(c("mean"), round, 2)) #mean output was returning values with 4 decimal places
  

coffee_survey_stats_by_group

#now to bind together both groups
coffee_survey_stats <- bind_rows(
  coffee_survey_stats_all,
  coffee_survey_stats_by_group)

coffee_survey_stats

#new label for explanatory variable facet
exp.labs <- c(
  "All",
  "Age",
  "Number of Children",
  "Employment Status",
  "In-Person or Virtual")

names(exp.labs) <- c(
  "All", 
  "age", 
  "number_children", 
  "employment_status", 
  "wfh")

coffee_survey_stats$explanatory = factor(coffee_survey_stats$explanatory, levels = c("All", "age", "number_children", "employment_status", "wfh"), ordered = TRUE) #manually order explanatory for facet


p3 <- ggplot(coffee_survey_stats, 
       aes(x = mean, y = explanatory_value)) +
  geom_point() +
  geom_errorbar(aes(xmin = low, xmax = high), 
                width = 0.2) +
  facet_grid(explanatory ~ response, 
             scales = "free", 
             space = "free",
             labeller = labeller(explanatory = exp.labs)) +
  labs(
    x = "Mean Likert score \n(Error bars range from 10th to 90th percentile)",
    y = NULL
  ) +
  xlim(0, 5) +
  theme_minimal() +
  theme(
    panel.grid = element_blank(), #remove lines in plot
    panel.spacing = unit(0.1, "cm"), #spacing between facets
    strip.text = element_text(colour = "black"),
    strip.background = element_rect( #creating blocks for facet labels to match original
      fill = "grey90", 
      color = "grey20", 
      linewidth = 1),
    strip.text.y = element_text(angle = 0)) #turn explanatory facets from vertical to horizontal
```

```{r}
#finally, who is drinking the most coffee??

coffee_survey_filter1_longer


survey_1 <- coffee_survey_filter1_longer %>% #editing response values so number equals actual response
  mutate(response_value = case_when(
    response_value == "0" ~ "Less than 1",
    response_value == "1" ~ "1",
    response_value == "2" ~ "2",
    response_value == "3" ~ "3",
    response_value == "4" ~ "4",
    response_value == "5" ~ "More than 4")
    )

survey_1

coffee_survey_percentage <- survey_1 %>% #calculate sums and percentages for diverging plot
  filter(!is.na(response_value)) %>% 
  group_by(explanatory, explanatory_value, response, response_value) %>% 
  summarise(count = n(), .groups = "drop") %>% 
  group_by(explanatory_value) %>% 
  mutate(percent_answers = (count / sum(count))) %>% 
  ungroup() %>% 
  mutate(percent_answers_label = percent(percent_answers, accuracy = 1)) %>% 
  mutate(percent_answers = 
           if_else(response_value %in% 
                     c("4"), 
                   percent_answers/2, percent_answers)) #method to make diverging bar plot with neutral in the middle
  
coffee_survey_percentage

coffee_survey_percentage$response_value <- factor(coffee_survey_percentage$response_value, levels = c("Less than 1", "1", "2", "3", "4", "More than 4"), ordered = TRUE) #manually order response value for facet


p4 <- coffee_survey_percentage %>% 
  ggplot(aes(x = explanatory_value,
             y = percent_answers,
             fill = response_value)) +
  geom_col(data = filter(coffee_survey_percentage, response_value %in% c("Less than 1")), aes(y = percent_answers)) +
  geom_col(data = filter(coffee_survey_percentage, response_value %in% c("4", "More than 4")), aes(y = -percent_answers)) +
  scale_fill_manual(breaks = c("Less than 1", "4", "More than 4"),
                    values = c("green4", "red3", "red4")) +
  facet_grid(explanatory ~ response, 
             scales = "free", 
             space = "free",
             labeller = labeller(explanatory = exp.labs)) +
  scale_x_discrete() +
  labs(
    title = "Extremes of Numbers of Coffee Drank",
    x = "Explanatory Value",
    y = "Percents",
    fill = "Number of Cups"
  ) +
  coord_flip() +
  scale_y_continuous(labels = scales::percent) +
  theme_minimal() +
  theme(title = element_text(face = "bold"),
        panel.grid.major.y = element_blank(),
        legend.text.position = "top",
        legend.title = element_text(hjust = 0.5, face = "bold"),
        axis.title = element_text(face = "bold"))

```





## Plots

```{r}
#plot 1
coffee_survey_count_plot1 %>%  
  ggplot(aes(x = "", y = total_cups, fill = cups)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  scale_x_discrete(NULL, expand = c(0, 0)) +
  scale_y_continuous(NULL, expand = c(0, 0)) +
  scale_fill_manual(values = 
                      c("#FBE183FF", "#FE9B00FF",
                        "#D8443CFF", "#9B3441FF", 
                        "#E87B89FF", "#E6A2A6FF"), name = "Cups of Coffee per Day") +
  geom_label_repel( 
    mapping = aes(y = pos, label = paste(percent)),
    size = 3,
    nudge_x = 0.9,
    show.legend = FALSE) +
  theme_void() +
  theme(
    axis.text = element_blank(),
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.title.position = "plot",
    legend.text = element_text(size = 8), #text of legend
    legend.key.size = unit(0.25, "cm"),
    plot.caption = element_text(hjust = 0, size = 6, face = "bold"),
    plot.tag = element_text(size = 6, hjust = 0),
    plot.tag.position = "bottom"
  ) 


# plot 2

#es1 / es2
#(es1 / es2) + geom_bar(stat = "identity", width = 1) +
  

p3

p4

```

## Plot and text

::: columns
::: {.column width="50%"}
-   Some text

-   goes here
:::

::: {.column width="50%"}
```{r, warning=FALSE, fig.width=5.5}

```
:::
:::

# A new section...

## Tables

If you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,

```{r}

```

## Images

![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png){fig-align="center" width="500"}

## Math Expressions {.smaller}

You can write LaTeX math expressions inside a pair of dollar signs, e.g. \$\\alpha+\\beta\$ renders $\alpha + \beta$. You can use the display style with double dollar signs:

```         
$$\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i$$
```

$$
\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i
$$

Limitations:

1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;

2.  There should not be spaces after the opening `$` or before the closing `$`.

# Wrap up

## Feeling adventurous?

-   You are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.

-   But some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs.
