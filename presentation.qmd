---
title: "Project title"
subtitle: "INFO 526 - Summer 2024 - Final Project"
author: "Author names"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
---

```{r}
#| label: load-packages
#| include: false

# Load packages here
pacman::p_load(dplyr,
               tidyverse, 
               glue, 
               scales, 
               here, 
               ggthemes, 
               janitor, 
               ggplot2, 
               readr)

```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

```{r}
#| label: load-data
#| include: false


# Load data here

coffee_survey <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-05-14/coffee_survey.csv')

coffee_survey

head(coffee_survey)
```

# Using Quarto for presentations

## Quarto

-   The presentation is created using the Quarto CLI

-   `##` sets the start of a new slide

## Layouts

You can use plain text

::: columns
::: {.column width="40%"}
-   or bullet points[^1]
:::

::: {.column width="60%"}
or in two columns
:::
:::

[^1]: And add footnotes

-   like

-   this

## Code

```{r, echo=FALSE}

coffee_survey


coffee_survey_clean <- coffee_survey %>% 
  select(cups, employment_status, number_children, wfh, age)

  
coffee_survey_clean <- coffee_survey_clean %>% filter(!is.na(cups))  

coffee_survey_clean  


# plot 1
coffee_survey_plot1 <- coffee_survey_clean %>% 
  select(cups, employment_status, wfh) %>% 
  filter(!is.na(employment_status)) %>%
  filter(!is.na(wfh))
  

coffee_survey_plot1

ggplot(coffee_survey_plot1) +
  geom_bar(aes(x= employment_status, fill= cups),
           position = "fill") 

coffee_survey_plot1_statuscount <- coffee_survey_plot1 %>% 
  count(employment_status) 

coffee_survey_plot1_totalcount <- coffee_survey_plot1 %>% 
  count(cups, employment_status) %>% 
  rename(total = n)

coffee_survey_plot1_totalcount_wfh <- coffee_survey_plot1 %>% 
  count(cups, employment_status, wfh) %>% 
  rename(total = n)

coffee_survey_plot1_totalcount_wfh

coffee_survey_plot1_statuscount

coffee_survey_plot1_totalcount

coffee_survey_plot1_use <- left_join(coffee_survey_plot1_statuscount, coffee_survey_plot1_totalcount)

coffee_survey_plot1_use <- coffee_survey_plot1_use %>% 
  mutate(percent = total/n)

coffee_survey_plot1_use

coffee_survey_plot1_use %>% 
  ggplot() +
  geom_bar(aes(x = employment_status, y = "", fill = fct_inorder(cups)), position = "fill", stat = "identity") 




ggplot(coffee_survey_plot1_totalcount_wfh) +
  geom_bar(aes(x= employment_status, fill= cups),
           position = "dodge") 
```

## Plots

```{r}
coffee_survey_clean %>% 
  filter(!is.na(employment_status)) %>%
  filter(!is.na(wfh)) %>% 
  ggplot() +
  geom_jitter(aes(x = employment_status, y = cups)) 

coffee_survey_clean %>% 
  filter(!is.na(employment_status)) %>%
  filter(!is.na(wfh)) %>% 
  ggplot() +
  geom_count(aes(x = employment_status, y = cups)) +
  scale_x_discrete(labels = label_wrap(10)) 



#geom_bar(stat="identity") +
  #scale_x_discrete(name = "name", labels = df$name)

#barplot(
  
#  count(tile)

  
#mutate(species = ifelse(species == "Adelie", "Adelie", "Other")) |>
 # ggplot(aes(x = flipper_length_mm, y = body_mass_g, color = species)) +
  #geom_point()
```

## Plot and text

::: columns
::: {.column width="50%"}
-   Some text

-   goes here
:::

::: {.column width="50%"}
```{r, warning=FALSE, fig.width=5.5}

```
:::
:::

# A new section...

## Tables

If you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,

```{r}

```

## Images

![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png){fig-align="center" width="500"}

## Math Expressions {.smaller}

You can write LaTeX math expressions inside a pair of dollar signs, e.g.Â \$\\alpha+\\beta\$ renders $\alpha + \beta$. You can use the display style with double dollar signs:

```         
$$\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i$$
```

$$
\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i
$$

Limitations:

1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;

2.  There should not be spaces after the opening `$` or before the closing `$`.

# Wrap up

## Feeling adventurous?

-   You are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.

-   But some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs.
